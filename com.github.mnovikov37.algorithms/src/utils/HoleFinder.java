package utils;

/**
 * Класс, который ищет пропущенный элемент в упорядоченной последовательновти
 */
public class HoleFinder {
    public static Integer find(Integer[] array) {
        Integer result = 1; // По умолчанию считаем, что пропущен первый элмемент
        int start = 0;
        int end = array.length - 1;

        if (end >= 0 && array[start] == 1) { // Если массив не пустой, и первый элемент на месте, ищем дальше.
            // Если последний элемент соответствует заданному порядку, то пропусков нет
            // Считаем в таком случае, что пропущен элемент "после последнего"
            if (array[end] == end + 1) {
                result = end + 2;
            } else {
                // Если пропущена не единица и не элемент "после последнего", то применяем бинарный поиск:
                // разбиваем диапазон пополам и далее работаем с той половиной, где нарушен порядок следования данных
                // Так повторяем до тех пор, пока диапазон не сузится до одного элемента, после которого должен
                // стоять пропущенный.
                while (start != end) {
                    int mid = (start + end) / 2;
                    if (array[mid] == mid + 1) {
                        start = mid + 1;
                    } else {
                        end = mid;
                    }
                }
                result = start + 1;
            }
        }

        return result;
    }
}
